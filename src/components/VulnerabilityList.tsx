
import React from 'react';
import { AlertTriangle, Info, ExternalLink } from 'lucide-react';
import DataCard from './ui/DataCard';
import { cn } from '@/lib/utils';

interface Vulnerability {
  id: string;
  severity: 'critical' | 'high' | 'medium' | 'low';
  name: string;
  description: string;
  recommendation: string;
  cvss: number;
}

interface VulnerabilityListProps {
  vulnerabilities: Vulnerability[];
}

const VulnerabilityList: React.FC<VulnerabilityListProps> = ({ vulnerabilities }) => {
  // Get color based on severity
  const getSeverityColor = (severity: string) => {
    switch(severity) {
      case 'critical': return 'text-red-500 bg-red-500/10';
      case 'high': return 'text-orange-500 bg-orange-500/10';
      case 'medium': return 'text-yellow-500 bg-yellow-500/10';
      case 'low': return 'text-green-500 bg-green-500/10';
      default: return 'text-muted-foreground bg-muted';
    }
  };

  return (
    <DataCard 
      title="Detected Vulnerabilities" 
      icon={<AlertTriangle className="h-5 w-5" />}
      className="h-full"
    >
      <div className="space-y-4">
        {vulnerabilities.length === 0 ? (
          <div className="flex flex-col items-center justify-center py-6 text-center">
            <Info className="h-12 w-12 text-green-500 mb-3" />
            <h4 className="text-lg font-medium">No Vulnerabilities Detected</h4>
            <p className="text-sm text-muted-foreground mt-1">
              The security scan did not detect any vulnerabilities.
            </p>
          </div>
        ) : (
          <div className="space-y-4">
            {vulnerabilities.map((vuln) => (
              <div key={vuln.id} className="glass-card p-4 rounded-lg">
                <div className="flex items-start justify-between">
                  <div>
                    <div className="flex items-center gap-2">
                      <span 
                        className={cn(
                          "text-xs uppercase font-medium px-2 py-0.5 rounded",
                          getSeverityColor(vuln.severity)
                        )}
                      >
                        {vuln.severity}
                      </span>
                      <h4 className="font-medium">{vuln.name}</h4>
                    </div>
                    <p className="text-xs text-muted-foreground mt-1">{vuln.id}</p>
                  </div>
                  <div className="text-right">
                    <div className="flex items-center gap-1">
                      <span className="text-sm font-semibold">CVSS:</span>
                      <span 
                        className={cn(
                          "text-sm",
                          vuln.cvss >= 9.0 ? "text-red-500" : 
                          vuln.cvss >= 7.0 ? "text-orange-500" :
                          vuln.cvss >= 4.0 ? "text-yellow-500" : "text-green-500"
                        )}
                      >
                        {vuln.cvss.toFixed(1)}
                      </span>
                    </div>
                  </div>
                </div>
                
                <div className="mt-3">
                  <p className="text-sm">{vuln.description}</p>
                </div>
                
                <div className="mt-3 p-3 bg-secondary/30 rounded-md">
                  <h5 className="text-sm font-medium">Recommendation</h5>
                  <p className="text-sm mt-1">{vuln.recommendation}</p>
                </div>
                
                <div className="mt-3 text-right">
                  <a 
                    href={`https://nvd.nist.gov/vuln/detail/${vuln.id}`}
                    target="_blank"
                    rel="noopener noreferrer" 
                    className="inline-flex items-center gap-1 text-primary text-xs hover:underline"
                  >
                    More details <ExternalLink className="h-3 w-3" />
                  </a>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </DataCard>
  );
};

export default VulnerabilityList;
